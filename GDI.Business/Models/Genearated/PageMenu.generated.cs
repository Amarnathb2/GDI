//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at https://docs.xperience.io/.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using CMS;
using CMS.Base;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.DocumentEngine;
using CMS.DocumentEngine.Types.GDI;

[assembly: RegisterDocumentType(PageMenu.CLASS_NAME, typeof(PageMenu))]

namespace CMS.DocumentEngine.Types.GDI
{
	/// <summary>
	/// Represents a content item of type PageMenu.
	/// </summary>
	public partial class PageMenu : TreeNode
	{
		#region "Constants and variables"

		/// <summary>
		/// The name of the data class.
		/// </summary>
		public const string CLASS_NAME = "GDI.PageMenu";


		/// <summary>
		/// The instance of the class that provides extended API for working with PageMenu fields.
		/// </summary>
		private readonly PageMenuFields mFields;

		#endregion


		#region "Properties"

		/// <summary>
		/// PageMenuID.
		/// </summary>
		[DatabaseIDField]
		public int PageMenuID
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("PageMenuID"), 0);
			}
			set
			{
				SetValue("PageMenuID", value);
			}
		}


		/// <summary>
		/// Page Title.
		/// </summary>
		[DatabaseField]
		public string PageTitle
		{
			get
			{
				return ValidationHelper.GetString(GetValue("PageTitle"), @"");
			}
			set
			{
				SetValue("PageTitle", value);
			}
		}


		/// <summary>
		/// Description.
		/// </summary>
		[DatabaseField]
		public string Description
		{
			get
			{
				return ValidationHelper.GetString(GetValue("Description"), @"");
			}
			set
			{
				SetValue("Description", value);
			}
		}


		/// <summary>
		/// Teaser Image.
		/// </summary>
		[DatabaseField]
		public string TeaserImage
		{
			get
			{
				return ValidationHelper.GetString(GetValue("TeaserImage"), @"");
			}
			set
			{
				SetValue("TeaserImage", value);
			}
		}


		/// <summary>
		/// Teaser Image Alt Text.
		/// </summary>
		[DatabaseField]
		public string TeaserImageAltText
		{
			get
			{
				return ValidationHelper.GetString(GetValue("TeaserImageAltText"), @"");
			}
			set
			{
				SetValue("TeaserImageAltText", value);
			}
		}


		/// <summary>
		/// Menu Item Group.
		/// </summary>
		[DatabaseField]
		public string MenuItemGroup
		{
			get
			{
				return ValidationHelper.GetString(GetValue("MenuItemGroup"), @"");
			}
			set
			{
				SetValue("MenuItemGroup", value);
			}
		}


		/// <summary>
		/// Show In Site Map.
		/// </summary>
		[DatabaseField]
		public bool ShowInSiteMap
		{
			get
			{
				return ValidationHelper.GetBoolean(GetValue("ShowInSiteMap"), false);
			}
			set
			{
				SetValue("ShowInSiteMap", value);
			}
		}


		/// <summary>
		/// Has Child.
		/// </summary>
		[DatabaseField]
		public bool HasChild
		{
			get
			{
				return ValidationHelper.GetBoolean(GetValue("HasChild"), false);
			}
			set
			{
				SetValue("HasChild", value);
			}
		}


		/// <summary>
		/// Checked if it has any parent page.
		/// </summary>
		[DatabaseField]
		public bool IsChild
		{
			get
			{
				return ValidationHelper.GetBoolean(GetValue("IsChild"), false);
			}
			set
			{
				SetValue("IsChild", value);
			}
		}


		/// <summary>
		/// Gets an object that provides extended API for working with PageMenu fields.
		/// </summary>
		[RegisterProperty]
		public PageMenuFields Fields
		{
			get
			{
				return mFields;
			}
		}


		/// <summary>
		/// Provides extended API for working with PageMenu fields.
		/// </summary>
		[RegisterAllProperties]
		public partial class PageMenuFields : AbstractHierarchicalObject<PageMenuFields>
		{
			/// <summary>
			/// The content item of type PageMenu that is a target of the extended API.
			/// </summary>
			private readonly PageMenu mInstance;


			/// <summary>
			/// Initializes a new instance of the <see cref="PageMenuFields" /> class with the specified content item of type PageMenu.
			/// </summary>
			/// <param name="instance">The content item of type PageMenu that is a target of the extended API.</param>
			public PageMenuFields(PageMenu instance)
			{
				mInstance = instance;
			}


			/// <summary>
			/// PageMenuID.
			/// </summary>
			public int ID
			{
				get
				{
					return mInstance.PageMenuID;
				}
				set
				{
					mInstance.PageMenuID = value;
				}
			}


			/// <summary>
			/// Page Title.
			/// </summary>
			public string PageTitle
			{
				get
				{
					return mInstance.PageTitle;
				}
				set
				{
					mInstance.PageTitle = value;
				}
			}


			/// <summary>
			/// Description.
			/// </summary>
			public string Description
			{
				get
				{
					return mInstance.Description;
				}
				set
				{
					mInstance.Description = value;
				}
			}


			/// <summary>
			/// Teaser Image.
			/// </summary>
			public string TeaserImage
			{
				get
				{
					return mInstance.TeaserImage;
				}
				set
				{
					mInstance.TeaserImage = value;
				}
			}


			/// <summary>
			/// Teaser Image Alt Text.
			/// </summary>
			public string TeaserImageAltText
			{
				get
				{
					return mInstance.TeaserImageAltText;
				}
				set
				{
					mInstance.TeaserImageAltText = value;
				}
			}


			/// <summary>
			/// Menu Item Group.
			/// </summary>
			public string MenuItemGroup
			{
				get
				{
					return mInstance.MenuItemGroup;
				}
				set
				{
					mInstance.MenuItemGroup = value;
				}
			}


			/// <summary>
			/// Show In Site Map.
			/// </summary>
			public bool ShowInSiteMap
			{
				get
				{
					return mInstance.ShowInSiteMap;
				}
				set
				{
					mInstance.ShowInSiteMap = value;
				}
			}


			/// <summary>
			/// Has Child.
			/// </summary>
			public bool HasChild
			{
				get
				{
					return mInstance.HasChild;
				}
				set
				{
					mInstance.HasChild = value;
				}
			}


			/// <summary>
			/// Checked if it has any parent page.
			/// </summary>
			public bool IsChild
			{
				get
				{
					return mInstance.IsChild;
				}
				set
				{
					mInstance.IsChild = value;
				}
			}
		}

		#endregion


		#region "Constructors"

		/// <summary>
		/// Initializes a new instance of the <see cref="PageMenu" /> class.
		/// </summary>
		public PageMenu() : base(CLASS_NAME)
		{
			mFields = new PageMenuFields(this);
		}

		#endregion
	}
}